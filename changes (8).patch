diff --git a/packages/extension-koni-ui/src/Popup/Home/index.tsx b/packages/extension-koni-ui/src/Popup/Home/index.tsx
index 5f8ae9f9c..dabddb5c7 100644
--- a/packages/extension-koni-ui/src/Popup/Home/index.tsx
+++ b/packages/extension-koni-ui/src/Popup/Home/index.tsx
@@ -3,15 +3,17 @@
 
 import { Layout } from '@subwallet/extension-koni-ui/components';
 import { GlobalSearchTokenModal } from '@subwallet/extension-koni-ui/components/Modal/GlobalSearchTokenModal';
+import { ScreenContext } from '@subwallet/extension-koni-ui/contexts/ScreenContext';
 import { HomeContext } from '@subwallet/extension-koni-ui/contexts/screen/HomeContext';
 import useAccountBalance from '@subwallet/extension-koni-ui/hooks/screen/home/useAccountBalance';
 import { useGetChainSlugsByAccountType } from '@subwallet/extension-koni-ui/hooks/screen/home/useGetChainSlugsByAccountType';
 import useTokenGroup from '@subwallet/extension-koni-ui/hooks/screen/home/useTokenGroup';
 import { ThemeProps } from '@subwallet/extension-koni-ui/types';
 import { ModalContext } from '@subwallet/react-ui';
-import React, { useCallback, useContext } from 'react';
+import React, { useCallback, useContext, useMemo } from 'react';
 import { Outlet } from 'react-router';
 import styled from 'styled-components';
+import Porfolio from '../Porfolio';
 
 type Props = ThemeProps;
 
@@ -19,6 +21,7 @@ export const GlobalSearchTokenModalId = 'globalSearchToken';
 
 function Component ({ className = '' }: Props): React.ReactElement<Props> {
   const { activeModal, inactiveModal } = useContext(ModalContext);
+  const { isWebUI } = useContext(ScreenContext);
   const chainsByAccountType = useGetChainSlugsByAccountType();
   const tokenGroupStructure = useTokenGroup(chainsByAccountType);
   const accountBalance = useAccountBalance(tokenGroupStructure.tokenGroupMap);
@@ -31,13 +34,9 @@ function Component ({ className = '' }: Props): React.ReactElement<Props> {
     inactiveModal(GlobalSearchTokenModalId);
   }, [inactiveModal]);
 
-  return (
-    <>
-      <HomeContext.Provider value={{
-        tokenGroupStructure,
-        accountBalance
-      }}
-      >
+  const HomeContent = useMemo(() => {
+    if (!isWebUI) {
+      return (
         <div className={`home home-container ${className}`}>
           <Layout.Home
             onClickSearchIcon={onOpenGlobalSearchToken}
@@ -47,6 +46,27 @@ function Component ({ className = '' }: Props): React.ReactElement<Props> {
             <Outlet />
           </Layout.Home>
         </div>
+      )
+    }
+
+    return (
+      <Layout.WithSideMenu
+        withBalanceHeader
+        withWebHeader
+      >
+        <Porfolio />
+      </Layout.WithSideMenu>
+    )
+  }, [isWebUI])
+
+  return (
+    <>
+      <HomeContext.Provider value={{
+        tokenGroupStructure,
+        accountBalance
+      }}
+      >
+        {HomeContent}
       </HomeContext.Provider>
 
       <GlobalSearchTokenModal
diff --git a/packages/extension-koni-ui/src/Popup/Keyring/Login.tsx b/packages/extension-koni-ui/src/Popup/Keyring/Login.tsx
index fd5f34673..cf84af059 100644
--- a/packages/extension-koni-ui/src/Popup/Keyring/Login.tsx
+++ b/packages/extension-koni-ui/src/Popup/Keyring/Login.tsx
@@ -4,6 +4,7 @@
 import LoginBg from '@subwallet/extension-koni-ui/assets/WelcomeBg.png';
 import { Layout, PageWrapper } from '@subwallet/extension-koni-ui/components';
 import Logo3D from '@subwallet/extension-koni-ui/components/Logo/Logo3D';
+import SocialGroup from '@subwallet/extension-koni-ui/components/SocialGroup';
 import { ScreenContext } from '@subwallet/extension-koni-ui/contexts/ScreenContext';
 import useTranslation from '@subwallet/extension-koni-ui/hooks/common/useTranslation';
 import useFocusById from '@subwallet/extension-koni-ui/hooks/form/useFocusById';
@@ -75,54 +76,60 @@ const Component: React.FC<Props> = ({ className }: Props) => {
       <Layout.Base>
         <div className='bg-gradient' />
         {!isWebUI && <div className='bg-image' />}
-        <div className='body-container'>
-          <div className='logo-container'>
-            <Logo3D />
-          </div>
-          <div className='title'>
-            {t('Welcome back!')}
-          </div>
-          <div className='sub-title'>
-            {t('Enter your password to unlock account')}
-          </div>
-          <Form
-            form={form}
-            initialValues={{ [FormFieldName.PASSWORD]: '' }}
-            onFieldsChange={onUpdate}
-            onFinish={onSubmit}
-          >
-            <Form.Item
-              name={FormFieldName.PASSWORD}
-              rules={[
-                {
-                  message: 'Password is required',
-                  required: true
-                }
-              ]}
-              statusHelpAsTooltip={true}
+        <div className={CN('body-container', {
+          '__web-ui': isWebUI
+        })}>
+          <div className='main-wrapper'>
+            <div className='logo-container'>
+              <Logo3D />
+            </div>
+            <div className='title'>
+              {t('Welcome back!')}
+            </div>
+            <div className='sub-title'>
+              {t('Enter your password to unlock account')}
+            </div>
+            <Form
+              form={form}
+              initialValues={{ [FormFieldName.PASSWORD]: '' }}
+              onFieldsChange={onUpdate}
+              onFinish={onSubmit}
             >
-              <Input.Password
-                containerClassName='password-input'
-                id={passwordInputId}
-                placeholder={t('Password')}
-              />
-            </Form.Item>
-            <Form.Item>
-              <Button
-                block={true}
-                disabled={isDisable}
-                htmlType='submit'
-                loading={loading}
+              <Form.Item
+                name={FormFieldName.PASSWORD}
+                rules={[
+                  {
+                    message: 'Password is required',
+                    required: true
+                  }
+                ]}
+                statusHelpAsTooltip={true}
               >
-                {t('Unlock')}
-              </Button>
-            </Form.Item>
-            <Form.Item>
-              <div className='forgot-password'>
-                {t('Forgot password')}
-              </div>
-            </Form.Item>
-          </Form>
+                <Input.Password
+                  containerClassName='password-input'
+                  id={passwordInputId}
+                  placeholder={t('Password')}
+                />
+              </Form.Item>
+              <Form.Item>
+                <Button
+                  block={true}
+                  disabled={isDisable}
+                  htmlType='submit'
+                  loading={loading}
+                >
+                  {t('Unlock')}
+                </Button>
+              </Form.Item>
+              <Form.Item>
+                <div className='forgot-password'>
+                  {t('Forgot password')}
+                </div>
+              </Form.Item>
+            </Form>
+
+          </div>
+          <SocialGroup />
         </div>
       </Layout.Base>
     </PageWrapper>
@@ -135,6 +142,25 @@ const Login = styled(Component)<Props>(({ theme }: Props) => {
   return {
     position: 'relative',
 
+    '.__web-ui': {
+      height: "100%",
+      display: "flex",
+      flexDirection: "column",
+
+      '.main-wrapper': {
+
+        flex: 1,
+        display: "flex",
+        flexDirection: "column",
+        justifyContent: 'center',
+        padding: '0 20%',
+
+        '.logo-container': {
+          margin: 0,
+        }
+      }
+    },
+
     '.bg-gradient': {
       backgroundImage: 'linear-gradient(180deg, rgba(0, 75, 255, 0.1) 16.47%, rgba(217, 217, 217, 0) 94.17%)',
       height: 290,
diff --git a/packages/extension-koni-ui/src/Popup/Porfolio/index.tsx b/packages/extension-koni-ui/src/Popup/Porfolio/index.tsx
index d6d791f9a..801bb8a9f 100644
--- a/packages/extension-koni-ui/src/Popup/Porfolio/index.tsx
+++ b/packages/extension-koni-ui/src/Popup/Porfolio/index.tsx
@@ -57,44 +57,22 @@ function Component({ className }: Props): React.ReactElement<Props> {
 
   return (
     <>
-      {/* <HomeContext.Provider value={{
-        tokenGroupStructure,
-        accountBalance
-      }}
-      > */}
       <div className={CN('home', 'home-container', className, {
         '__web-ui': isWebUI
       })}>
-        {isWebUI ?
-            <ScreenTab rightSection={rightSection}>
-              <ScreenTab.SwTabPanel key={'tokens'} label="Tokens">
-                <>
-                  <Tokens />
-                </>
-              </ScreenTab.SwTabPanel>
-              <ScreenTab.SwTabPanel key={'collections'} label="Collections">
-                <>
-                  <NftCollections />
-                </>
-              </ScreenTab.SwTabPanel>
-            </ScreenTab>
-        :
-          <Layout.Home
-            onClickSearchIcon={onOpenGlobalSearchToken}
-            showFilterIcon
-            showSearchIcon
-          >
-            <Outlet />
-        </Layout.Home>}
+          <ScreenTab rightSection={rightSection}>
+            <ScreenTab.SwTabPanel key={'tokens'} label="Tokens">
+              <>
+                <Tokens />
+              </>
+            </ScreenTab.SwTabPanel>
+            <ScreenTab.SwTabPanel key={'collections'} label="Collections">
+              <>
+                <NftCollections />
+              </>
+            </ScreenTab.SwTabPanel>
+          </ScreenTab>
       </div>
-      {/* </HomeContext.Provider> */}
-
-      <GlobalSearchTokenModal
-        id={GlobalSearchTokenModalId}
-        onCancel={onCloseGlobalSearchToken}
-        sortedTokenSlugs={tokenGroupStructure.sortedTokenSlugs}
-        tokenBalanceMap={accountBalance.tokenBalanceMap}
-      />
     </>
   )
 }
diff --git a/packages/extension-koni-ui/src/Popup/Root.tsx b/packages/extension-koni-ui/src/Popup/Root.tsx
index f7bb7d781..94423d5fd 100644
--- a/packages/extension-koni-ui/src/Popup/Root.tsx
+++ b/packages/extension-koni-ui/src/Popup/Root.tsx
@@ -143,36 +143,10 @@ const Main = styled.main`
   flex-direction: column;
 `;
 
-const SCREENS_SIDE_BAR = [
-  'home',
-  'crowdloans',
-  'staking',
-  'dapps',
-  'history',
-  'settings',
-  'faqs',
-  'contact',
-  'tos',
-]
-
-const SCREENS_HEADER = [
-  'home',
-  'crowdloans',
-  'staking',
-  'dapps',
-  'history',
-]
-
 function _Root ({ className }: ThemeProps): React.ReactElement {
   const dataContext = useContext(DataContext);
-  const { isWebUI } = useContext(ScreenContext);
-
-  const { pathname } = useLocation();
-  const currentPage = pathname.split('/')[1];
-
-  const MainLayout = isWebUI && SCREENS_SIDE_BAR.includes(currentPage) ? Layout.WithSideMenu : React.Fragment
-  // const
   // Implement WalletModalContext in Root component to make it available for all children and can use react-router-dom and ModalContextProvider
+
   return (
     <WalletModalContext>
       <PageWrapper
@@ -182,12 +156,7 @@ function _Root ({ className }: ThemeProps): React.ReactElement {
       >
         <DefaultRoute>
           <Main className={className}>
-            <MainLayout
-              withBalanceHeader={currentPage === 'home'}
-              withWebHeader={SCREENS_HEADER.includes(currentPage)}
-            >
-              <Outlet />
-            </MainLayout>
+            <Outlet />
           </Main>
         </DefaultRoute>
       </PageWrapper>
diff --git a/packages/extension-koni-ui/src/Popup/router.tsx b/packages/extension-koni-ui/src/Popup/router.tsx
index 2a88740e6..1590960f5 100644
--- a/packages/extension-koni-ui/src/Popup/router.tsx
+++ b/packages/extension-koni-ui/src/Popup/router.tsx
@@ -112,8 +112,7 @@ export const router = createBrowserRouter([
       CreateDone.generateRouterObject('/create-done'),
       Crowdloans.generateRouterObject('/crowdloans'),
       {
-        // ...Home.generateRouterObject('/home'),
-        ...Porfolio.generateRouterObject('/home'),
+        ...Home.generateRouterObject('/home'),
         children: [
           Tokens.generateRouterObject('tokens'),
           TokenDetailList.generateRouterObject('tokens/detail/:slug'),
diff --git a/packages/extension-koni-ui/src/components/History/HistoryItem.tsx b/packages/extension-koni-ui/src/components/History/HistoryItem.tsx
index 08f67714e..7ce4c34df 100644
--- a/packages/extension-koni-ui/src/components/History/HistoryItem.tsx
+++ b/packages/extension-koni-ui/src/components/History/HistoryItem.tsx
@@ -1,12 +1,21 @@
 // Copyright 2019-2022 @subwallet/extension-koni-ui authors & contributors
 // SPDX-License-Identifier: Apache-2.0
 
-import { TransactionDirection } from '@subwallet/extension-base/background/KoniTypes';
+import { ExtrinsicStatus, TransactionDirection } from '@subwallet/extension-base/background/KoniTypes';
+import { getTransactionLink } from '@subwallet/extension-base/services/transaction-service/utils';
+import { StatusType } from '@subwallet/extension-koni-ui/Popup/Home/History/Detail';
+import { ScreenContext } from '@subwallet/extension-koni-ui/contexts/ScreenContext';
+import { RootState } from '@subwallet/extension-koni-ui/stores';
 import { ThemeProps, TransactionHistoryDisplayItem } from '@subwallet/extension-koni-ui/types';
-import { Icon, Logo, Number, Web3Block } from '@subwallet/react-ui';
+import { openInNewTab, toShort } from '@subwallet/extension-koni-ui/utils';
+import { Icon, Logo, Number, Typography, Web3Block, Tag, Button } from '@subwallet/react-ui';
+import SwAvatar from '@subwallet/react-ui/es/sw-avatar';
 import CN from 'classnames';
-import { CaretRight } from 'phosphor-react';
-import React from 'react';
+import { t } from 'i18next';
+import moment from 'moment';
+import { ArrowSquareOut, CaretRight, CheckCircle, ProhibitInset, Spinner, StopCircle } from 'phosphor-react';
+import React, { useContext, useMemo } from 'react';
+import { useSelector } from 'react-redux';
 import styled from 'styled-components';
 
 type Props = ThemeProps & {
@@ -17,8 +26,9 @@ type Props = ThemeProps & {
 function Component (
   { className = '', item, onClick }: Props) {
   const displayData = item.displayData;
+  const { isWebUI } = useContext(ScreenContext)
 
-  return (
+  if (!isWebUI) return (
     <Web3Block
       className={CN('history-item', className, displayData.className)}
       leftItem={(
@@ -74,6 +84,116 @@ function Component (
       )}
     />
   );
+
+  const statusMap = useMemo<Record<string, StatusType>>(
+    () => ({
+      [ExtrinsicStatus.SUCCESS]: {
+        schema: "success",
+        icon: CheckCircle,
+        name: t("Completed"),
+      },
+      [ExtrinsicStatus.FAIL]: {
+        schema: "danger",
+        icon: ProhibitInset,
+        name: t("Failed"),
+      },
+      [ExtrinsicStatus.PROCESSING]: {
+        schema: "gold",
+        icon: Spinner,
+        name: t("Processing"),
+      },
+      [ExtrinsicStatus.PENDING]: {
+        schema: "gold",
+        icon: Spinner,
+        name: t("Pending"),
+      },
+      [ExtrinsicStatus.UNKNOWN]: {
+        schema: "danger",
+        icon: StopCircle,
+        name: t("Unknown"),
+      },
+    }),
+    [t]
+  );
+
+  const chainInfoMap = useSelector((state: RootState) => state.chainStore.chainInfoMap);
+
+  const chainInfo = chainInfoMap[item.chain];
+  const time = moment(item.time).format('hh:mm A')
+  const link = !!item.extrinsicHash && getTransactionLink(chainInfo, item.extrinsicHash);
+
+  return (
+    <div className={CN(className, displayData.className, '__web-ui')} onClick={onClick}>
+      <div className='account-wrapper'>
+        <SwAvatar
+          size={30}
+          value={item.address}
+        />
+        <div className='account-info'>
+          <Typography.Text>{item.direction === TransactionDirection.SEND ? (item.fromName || item.from || '') : (item.toName || item.to || '')}</Typography.Text>
+          <Typography.Text className='account-address'>{toShort(item.address)}</Typography.Text>
+        </div>
+      </div>
+
+      <div className="status-wrapper">
+        <div className={'__main-icon-wrapper'}>
+          <Icon
+            className={'__main-icon'}
+            phosphorIcon={displayData.icon}
+            size={'md'}
+            iconColor='success'
+          />
+          <Logo
+            className={'__chain-logo'}
+            network={item.chain}
+            size={16}
+          />
+        </div>
+        <div>
+          <div className={'__account-name'}>{item.displayData.name}</div>
+          <div className={'__meta'}>{time}</div>
+        </div>
+      </div>
+
+      <div className='value-wrapper'>
+        <Number
+          className={'__value'}
+          decimal={0}
+          decimalOpacity={0.45}
+          value={11}
+          suffix={item.amount?.symbol}
+        />
+        <Number
+          className={'__converted-value'}
+          decimal={0}
+          decimalOpacity={0.45}
+          intOpacity={0.45}
+          prefix='$'
+          size={12}
+          unitOpacity={0.45}
+          value={11122}
+        />
+      </div>
+
+      <div className="status-tag">
+        <Tag
+          className='tag'
+          color={statusMap[item.status].schema}
+        >
+          {statusMap[item.status].name}
+        </Tag>
+
+        <Button
+          type='ghost'
+          onClick={(e) => {
+            e.stopPropagation()
+            link && openInNewTab(link)()
+          }}
+          icon={<Icon phosphorIcon={ArrowSquareOut} size="sm" />}
+        />
+      </div>
+    </div>
+  )
 }
 
 export const HistoryItem = styled(Component)<Props>(({ theme: { token } }: Props) => {
@@ -84,7 +204,7 @@ export const HistoryItem = styled(Component)<Props>(({ theme: { token } }: Props
     paddingBottom: 0,
     minHeight: 68,
 
-    '.ant-number .ant-typography': {
+    '&:not(.__web-ui) .ant-number .ant-typography': {
       fontSize: 'inherit !important',
       fontWeight: 'inherit !important',
       lineHeight: 'inherit'
@@ -192,6 +312,60 @@ export const HistoryItem = styled(Component)<Props>(({ theme: { token } }: Props
       '.__main-icon': {
         color: token.colorSuccess
       }
-    }
+    },
+
+    '&.__web-ui': {
+      display: 'flex',
+      justifyContent: 'space-between',
+      alignItems: 'center',
+      paddingLeft: 12,
+      marginBottom: 8,
+      cursor: 'pointer',
+
+      '.__account-name': {
+        fontWeight: 500
+      },
+
+      "&:hover": {
+
+      },
+
+      ".status-wrapper": {
+        display: 'flex',
+        justifyContent: 'center',
+        '.__main-icon-wrapper': {
+          marginRight: 8
+        }
+      },
+
+      ".account-wrapper": {
+        display: 'inline-flex',
+        alignItems: 'center',
+
+        ".account-info": {
+          display: "flex",
+          flexDirection: 'column',
+          marginLeft: 8,
+
+          '.account-address': {
+            color: 'rgba(255, 255, 255, 0.45)',
+            fontSize: '12px',
+            lineHeight: '20px',
+            fontWeight: 500,
+          },
+        },
+      },
+
+      ".status-tag": {
+        display:'flex',
+        alignItems: 'center',
+        justifyContent: 'flex-end'
+      },
+
+      ".value-wrapper": {
+        textAlign: 'right',
+      },
+    },
+
   });
 });
diff --git a/packages/extension-koni-ui/src/components/Layout/Layout.tsx b/packages/extension-koni-ui/src/components/Layout/Layout.tsx
index e1081a17c..ec80fb5e6 100644
--- a/packages/extension-koni-ui/src/components/Layout/Layout.tsx
+++ b/packages/extension-koni-ui/src/components/Layout/Layout.tsx
@@ -6,7 +6,7 @@ import { Home } from './base/Home';
 import { WithSubHeaderOnly } from './base/WithSubHeaderOnly';
 import { WithSideMenu } from './base/WithSideMenu';
 
-type CompoundedComponent = {
+export type CompoundedComponent = {
   Home: typeof Home;
   Base: typeof Base;
   WithSubHeaderOnly: typeof WithSubHeaderOnly;
diff --git a/packages/extension-koni-ui/src/components/Layout/base/Responsive.tsx b/packages/extension-koni-ui/src/components/Layout/base/Responsive.tsx
new file mode 100644
index 000000000..b0e3e1ecf
--- /dev/null
+++ b/packages/extension-koni-ui/src/components/Layout/base/Responsive.tsx
@@ -0,0 +1,37 @@
+// Copyright 2019-2022 @polkadot/extension-koni-ui authors & contributors
+// SPDX-License-Identifier: Apache-2.0
+
+import React, { useContext } from 'react';
+
+import { LayoutBaseProps } from './Base';
+import { SideMenuProps } from './WithSideMenu';
+import { ScreenContext } from '@subwallet/extension-koni-ui/contexts/ScreenContext';
+import Layout from '../Layout';
+
+type Props = (LayoutBaseProps | SideMenuProps) & {
+  MobileLayout: (props: LayoutBaseProps | SideMenuProps ) => JSX.Element;
+};
+
+const ResponsiveMenu = ({ children, MobileLayout, ...rest }: Props) => {
+  const { isWebUI } = useContext(ScreenContext);
+
+  if (isWebUI) {
+    return (
+      <Layout.WithSideMenu
+        {...rest}
+      >
+        {children}
+      </Layout.WithSideMenu>
+    )
+  }
+
+  return (
+    <MobileLayout
+      {...rest}
+    >
+      {children}
+    </MobileLayout>
+  )
+};
+
+export { ResponsiveMenu };
diff --git a/packages/extension-koni-ui/src/components/Layout/base/WithSideMenu.tsx b/packages/extension-koni-ui/src/components/Layout/base/WithSideMenu.tsx
index 454baa102..2edc11c94 100644
--- a/packages/extension-koni-ui/src/components/Layout/base/WithSideMenu.tsx
+++ b/packages/extension-koni-ui/src/components/Layout/base/WithSideMenu.tsx
@@ -9,10 +9,8 @@ import SideMenu from '../parts/SideMenu';
 import BalanceHeader from '../parts/Header/Balance';
 import styled from 'styled-components';
 import WebHeader from '../parts/Header';
-import { useAccountBalance, useGetChainSlugsByAccountType, useTokenGroup } from '@subwallet/extension-koni-ui/hooks';
-import { HomeContext } from '@subwallet/extension-koni-ui/contexts/screen/HomeContext';
 
-type Props = Omit<
+export type SideMenuProps = Omit<
 LayoutBaseProps,
 'headerBackground' | 'headerIcons' | 'headerLeft' | 'headerCenter' | 'headerOnClickLeft' | 'headerPaddingVertical' | 'showHeader'
 > & {
@@ -20,55 +18,47 @@ LayoutBaseProps,
   withWebHeader?: boolean
 };
 
-const LayoutContainer = styled(Layout.Content)`
+const LayoutContainer = styled(Layout)`
   padding: 20px 36px 80px 44px;
   background: #0C0C0C;
   height: 100%;
   overflow: scroll;
 `
 
-const FixedHeader = styled.div`
-  /* position: 'fixed'; */
-`
+// const LayoutHeader = styled(Layout.Header)`
+//   padding: 0;
+//   padding-inline: 0 !important;
+//   background: #0C0C0C !important;
+//   height: fit-content !important;
+// `
 
-const WithSideMenu = (props: Props) => {
+const WithSideMenu = (props: SideMenuProps) => {
   const {
     children,
-    showBackButton = false,
-    subHeaderCenter = true,
-    subHeaderPaddingVertical = true,
     withBalanceHeader = false,
     withWebHeader = false,
-    ...restProps
+    // ...restProps
   } = props;
 
-  const chainsByAccountType = useGetChainSlugsByAccountType();
-  console.log('====chainsByAccountType', chainsByAccountType);
-  const tokenGroupStructure = useTokenGroup(chainsByAccountType);
-  console.log('tokenGroupStructure', tokenGroupStructure);
-  const accountBalance = useAccountBalance(tokenGroupStructure.tokenGroupMap);
-  console.log('accountBalance', accountBalance);
-
   return (
-    <HomeContext.Provider value={{
-      tokenGroupStructure,
-      accountBalance
-    }}
-    >
-      <Layout>
-        <Layout.Sider width={250}>
-          <SideMenu />
-        </Layout.Sider>
+    <Layout>
+      <Layout.Sider width={250}>
+        <SideMenu />
+      </Layout.Sider>
 
-        <LayoutContainer>
-          <FixedHeader>
+      <LayoutContainer>
+        {(withWebHeader || withBalanceHeader) && (
+          <div>
             {withWebHeader && <WebHeader />}
             {withBalanceHeader && <BalanceHeader />}
-          </FixedHeader>
+          </div>
+        )}
+
+        <Layout.Content>
           {children}
-        </LayoutContainer>
-      </Layout>
-    </HomeContext.Provider>
+        </Layout.Content>
+      </LayoutContainer>
+    </Layout>
   );
 };
 
diff --git a/packages/extension-koni-ui/src/components/Layout/parts/Header/Balance.tsx b/packages/extension-koni-ui/src/components/Layout/parts/Header/Balance.tsx
index b86068d9b..e10b3a574 100644
--- a/packages/extension-koni-ui/src/components/Layout/parts/Header/Balance.tsx
+++ b/packages/extension-koni-ui/src/components/Layout/parts/Header/Balance.tsx
@@ -1,6 +1,5 @@
-import { NumberItem } from "@subwallet/extension-koni-ui/components/MetaInfo/parts"
 import { PhosphorIcon, ThemeProps } from "@subwallet/extension-koni-ui/types"
-import { Button, Icon, Typography, Number, SwNumberProps, Tag, Divider } from "@subwallet/react-ui"
+import { Button, Icon, Typography, Number, Tag, Divider } from "@subwallet/react-ui"
 import CN from "classnames"
 import {
   EyeClosed,
@@ -53,13 +52,15 @@ function Component({ className }: Props): React.ReactElement<Props> {
   const { accountBalance: { tokenGroupBalanceMap,
     totalBalanceInfo }, tokenGroupStructure: { sortedTokenGroups } } = useContext(HomeContext);
 
-  const { accountSelectorItems,
+  const {
     onOpenReceive,
-    openSelectAccount,
-    openSelectToken,
-    selectedAccount,
-    selectedNetwork,
-    tokenSelectorItems } = useReceiveQR();
+    // accountSelectorItems,
+    // openSelectAccount,
+    // openSelectToken,
+    // selectedAccount,
+    // selectedNetwork,
+    // tokenSelectorItems
+  } = useReceiveQR();
   const currentAccount = useSelector((state: RootState) => state.accountState.currentAccount);
   const notify = useNotification();
 
@@ -67,7 +68,6 @@ function Component({ className }: Props): React.ReactElement<Props> {
   const totalChangePercent = totalBalanceInfo.change.percent;
   const totalChangeValue = totalBalanceInfo.change.value;
   const totalValue = totalBalanceInfo.convertedValue;
-  console.log('totalValue', totalValue);
 
   const onOpenBuyTokens = useCallback(() => {
     navigate('/buy-tokens');
diff --git a/packages/extension-koni-ui/src/components/Layout/parts/Header/WebHeader.tsx b/packages/extension-koni-ui/src/components/Layout/parts/Header/WebHeader.tsx
index 863c82cd1..17e377768 100644
--- a/packages/extension-koni-ui/src/components/Layout/parts/Header/WebHeader.tsx
+++ b/packages/extension-koni-ui/src/components/Layout/parts/Header/WebHeader.tsx
@@ -10,19 +10,19 @@ export type Props = ThemeProps & {
 
 const mock = [
   {
-    address: "string",
+    address: "1",
     name: "string",
   },
   {
-    address: "string",
+    address: "2",
     name: "string",
   },
   {
-    address: "string",
+    address: "3",
     name: "string",
   },
   {
-    address: "string",
+    address: "4",
     name: "string",
   },
 ]
@@ -42,13 +42,11 @@ function Component({ title = 'Porfolio', className, withController = true }: Pro
             className="ava-group"
             accounts={mock}
             content={`${mock.length} networks`}
-            // label={t(data.type === StakingType.POOLED ? "Pool" : "Validators")}
           />
           <MetaInfo.AccountGroup
             className="ava-group"
             accounts={mock}
             content={`${mock.length} networks`}
-            // label={t(data.type === StakingType.POOLED ? "Pool" : "Validators")}
           />
         </div>}
       </div>
diff --git a/packages/extension-koni-ui/src/components/StakingItem/SwStakingItem.tsx b/packages/extension-koni-ui/src/components/StakingItem/SwStakingItem.tsx
index 298dc2cfd..188cbe119 100644
--- a/packages/extension-koni-ui/src/components/StakingItem/SwStakingItem.tsx
+++ b/packages/extension-koni-ui/src/components/StakingItem/SwStakingItem.tsx
@@ -2,14 +2,18 @@
 // SPDX-License-Identifier: Apache-2.0
 
 import { StakingType } from '@subwallet/extension-base/background/KoniTypes';
+import { ScreenContext } from '@subwallet/extension-koni-ui/contexts/ScreenContext';
 import { getBalanceValue, getConvertedBalanceValue } from '@subwallet/extension-koni-ui/hooks/screen/home/useAccountBalance';
 import { PhosphorIcon, ThemeProps } from '@subwallet/extension-koni-ui/types';
 import { StakingDataType } from '@subwallet/extension-koni-ui/types/staking';
-import { Icon, StakingItem, Tag } from '@subwallet/react-ui';
+import { Button, Icon, StakingItem, Tag } from '@subwallet/react-ui';
 import capitalize from '@subwallet/react-ui/es/_util/capitalize';
-import { User, Users } from 'phosphor-react';
-import React, { SyntheticEvent, useCallback, useMemo } from 'react';
-import styled from 'styled-components';
+import { DotsThree, User, Users } from 'phosphor-react';
+import React, { SyntheticEvent, useCallback, useContext, useMemo } from 'react';
+import styled, { ThemeContext } from 'styled-components';
+import CN from 'classnames';
+import { TokenItem } from '../TokenItem';
+import {Number as NumberItem} from '@subwallet/react-ui';
 
 interface Props extends ThemeProps {
   stakingData: StakingDataType,
@@ -36,6 +40,7 @@ const getStakingTypeTag = (stakingType: StakingType) => {
 
 const Component: React.FC<Props> = ({ className, decimals, onClickItem, onClickRightIcon, priceMap, stakingData }: Props) => {
   const { staking } = stakingData;
+  const { isWebUI } = useContext(ScreenContext);
 
   const balanceValue = getBalanceValue(staking.balance || '0', decimals);
 
@@ -50,19 +55,99 @@ const Component: React.FC<Props> = ({ className, decimals, onClickItem, onClickR
 
   const _onPressItem = useCallback(() => onClickItem(stakingData), [onClickItem, stakingData]);
 
+  if (!isWebUI)
+    return (
+      <StakingItem
+        className={className}
+        convertedStakingValue={convertedBalanceValue}
+        decimal={0}
+        networkKey={staking.chain}
+        onClickRightIcon={_onClickRightIcon}
+        onPressItem={_onPressItem}
+        stakingNetwork={staking.nativeToken}
+        stakingType={getStakingTypeTag(staking.type)}
+        stakingValue={balanceValue}
+      />
+    );
+
+  const {
+    staking: {
+      chain,
+      nativeToken
+    }
+  } = stakingData;
+
+  const { token } = useContext(ThemeContext)
+
+  // TODO: update priceChangeStatus
+  let priceChangeStatus = 'increase'
+  const marginColor = priceChangeStatus === 'increase' ? token.colorSuccess : token.colorError
+
   return (
-    <StakingItem
-      className={className}
-      convertedStakingValue={convertedBalanceValue}
-      decimal={0}
-      networkKey={staking.chain}
-      onClickRightIcon={_onClickRightIcon}
-      onPressItem={_onPressItem}
-      stakingNetwork={staking.nativeToken}
-      stakingType={getStakingTypeTag(staking.type)}
-      stakingValue={balanceValue}
-    />
-  );
+    <div className={CN(className, '__web-ui')} onClick={_onPressItem}>
+      <TokenItem
+        logoKey={chain}
+        symbol={nativeToken}
+      />
+
+      <div className='type-wrapper'>
+        {getStakingTypeTag(staking.type)}
+      </div>
+
+      <div className={CN('price-wrapper', className)}>
+        <NumberItem
+          value={10}
+          prefix={'$'}
+          decimal={0}
+          decimalOpacity={0.45}
+        />
+        <NumberItem
+          value={10}
+          suffix='%'
+          prefix={'decrease' === 'decrease' ? '-' : '+'}
+          className='margin-percentage'
+          decimal={0}
+          size={12}
+          unitColor={marginColor}
+          intColor={marginColor}
+          decimalColor={marginColor}
+        />
+      </div>
+
+      <div className='funds-wrapper'>
+        <div className='funds'>
+          <NumberItem
+            className={'__value'}
+            decimal={0}
+            decimalOpacity={0.45}
+            value={11}
+            suffix={staking.unit}
+          />
+          <NumberItem
+            className={'__converted-value'}
+            decimal={0}
+            decimalOpacity={0.45}
+            intOpacity={0.45}
+            prefix='$'
+            size={12}
+            unitOpacity={0.45}
+            value={11122}
+          />
+        </div>
+        <Button
+          type='ghost'
+          icon={<Icon
+            className={'right-icon'}
+            type="phosphor"
+            phosphorIcon={DotsThree}
+            size="xs"
+          />}
+          onClick={_onClickRightIcon}
+          size='sm'
+        />
+      </div>
+    </div>
+  )
 };
 
 const SwStakingItem = styled(Component)<Props>(({ theme: { token } }: Props) => {
@@ -98,6 +183,32 @@ const SwStakingItem = styled(Component)<Props>(({ theme: { token } }: Props) =>
       '&::before': {
         borderRadius: token.borderRadiusLG
       }
+    },
+
+    '&.__web-ui': {
+      display: 'flex',
+      justifyContent: 'space-between',
+      alignItems: 'center',
+      background: '#1A1A1A',
+      borderRadius: 8,
+      padding: '15px 13px',
+      cursor: 'pointer',
+
+      '.type-wrapper': {
+        alignSelf: 'start',
+      },
+
+      '.funds-wrapper': {
+        display: 'flex',
+        justifyContent: 'center',
+        alignItems: 'center',
+      },
+
+      '.price-wrapper, .funds': {
+        display: 'flex',
+        flexDirection: 'column',
+        alignItems: 'end',
+      },
     }
   };
 });
diff --git a/packages/extension-koni-ui/src/components/TokenItem/WebList/TokenItem.tsx b/packages/extension-koni-ui/src/components/TokenItem/WebList/TokenItem.tsx
index 579eb31c7..f2e97ac98 100644
--- a/packages/extension-koni-ui/src/components/TokenItem/WebList/TokenItem.tsx
+++ b/packages/extension-koni-ui/src/components/TokenItem/WebList/TokenItem.tsx
@@ -3,9 +3,8 @@
 
 import { ThemeProps } from '@subwallet/extension-koni-ui/types';
 import { TokenBalanceItemType } from '@subwallet/extension-koni-ui/types/balance';
-import { ActivityIndicator, BalanceItem, BalanceItemProps, Icon, Logo, Number, Typography, Web3Block } from '@subwallet/react-ui';
+import {  BalanceItemProps, Logo, Typography } from '@subwallet/react-ui';
 import classNames from 'classnames';
-import { CaretRight } from 'phosphor-react';
 import React from 'react';
 import styled from 'styled-components';
 
@@ -41,8 +40,8 @@ function Component (
     <div className={classNames('token-item-container', className)}>
       <Logo
         size={40}
-        network={symbol}
-        token={logoKey}
+        network={logoKey}
+        token={symbol}
         shape={'squircle'}
         isShowSubLogo={false}
       />
diff --git a/packages/extension-koni-ui/src/components/TokenItem/WebList/TokenPrice.tsx b/packages/extension-koni-ui/src/components/TokenItem/WebList/TokenPrice.tsx
index d7b2de5ae..9c6ce393d 100644
--- a/packages/extension-koni-ui/src/components/TokenItem/WebList/TokenPrice.tsx
+++ b/packages/extension-koni-ui/src/components/TokenItem/WebList/TokenPrice.tsx
@@ -29,10 +29,7 @@ function Component (
 
   const marginColor = priceChangeStatus === 'increase' ? token.colorSuccess : token.colorError
   const margin = !price24hValue || !priceValue ? 0 : Math.abs(price24hValue - priceValue) / price24hValue * 100;
-  if (symbol === 'HKO') console.log('====>', {
-    price24hValue,
-    priceValue
-  })
+
   return (
     <div className={classNames('token-price', className, {
       '-price-decrease': priceChangeStatus === 'decrease'
diff --git a/packages/extension-koni-ui/src/contexts/ScreenContext.tsx b/packages/extension-koni-ui/src/contexts/ScreenContext.tsx
index 5352da084..db58629d4 100644
--- a/packages/extension-koni-ui/src/contexts/ScreenContext.tsx
+++ b/packages/extension-koni-ui/src/contexts/ScreenContext.tsx
@@ -8,9 +8,9 @@ export enum Screens {
 }
 
 const ScreenBreakpoint: Record<Screens, [number, number?]> = {
-  [Screens.DESKTOP]: [1024],
+  [Screens.DESKTOP]: [1025],
   [Screens.TABLET_HORIZONTAL]: [992, 1024],
-  [Screens.TABLET_VERTICAL]: [768, 992],
+  [Screens.TABLET_VERTICAL]: [768, 991],
   [Screens.MOBILE]: [0, 768],
 }
 

diff --git a/node_modules/@mangata-finance/type-definitions/CHANGELOG.md b/node_modules/@mangata-finance/type-definitions/CHANGELOG.md
index 094bacd..11c9bde 100644
--- a/node_modules/@mangata-finance/type-definitions/CHANGELOG.md
+++ b/node_modules/@mangata-finance/type-definitions/CHANGELOG.md
@@ -1,31 +1,3 @@
-## [2.1.2-rc.1](https://github.com/mangata-finance/mangata-dev-kit/compare/@mangata-finance/type-definitions-v2.1.1...@mangata-finance/type-definitions-v2.1.2-rc.1) (2023-12-19)
-
-
-### Bug Fixes
-
-* update return type ([b394578](https://github.com/mangata-finance/mangata-dev-kit/commit/b3945780e17cff45303bd0052b0a7403caa4ec66))
-
-## [2.1.1](https://github.com/mangata-finance/mangata-dev-kit/compare/@mangata-finance/type-definitions-v2.1.0...@mangata-finance/type-definitions-v2.1.1) (2023-12-19)
-
-
-### Bug Fixes
-
-* update project json ([1b935bf](https://github.com/mangata-finance/mangata-dev-kit/commit/1b935bfd818cbb98c68319b7da2a6ddb53a0dbce))
-
-## [2.1.1-rc.1](https://github.com/mangata-finance/mangata-dev-kit/compare/@mangata-finance/type-definitions-v2.1.0...@mangata-finance/type-definitions-v2.1.1-rc.1) (2023-12-19)
-
-
-### Bug Fixes
-
-* update project json ([1b935bf](https://github.com/mangata-finance/mangata-dev-kit/commit/1b935bfd818cbb98c68319b7da2a6ddb53a0dbce))
-
-# [2.1.0](https://github.com/mangata-finance/mangata-dev-kit/compare/@mangata-finance/type-definitions-v2.0.0...@mangata-finance/type-definitions-v2.1.0) (2023-12-13)
-
-
-### Features
-
-* add new rpc ([ab6ecec](https://github.com/mangata-finance/mangata-dev-kit/commit/ab6ecece584d2e9c04e30ee49073a2f504ad1ae4))
-
 # [2.1.0-rc.1](https://github.com/mangata-finance/mangata-dev-kit/compare/@mangata-finance/type-definitions-v2.0.0...@mangata-finance/type-definitions-v2.1.0-rc.1) (2023-12-13)
 
 
diff --git a/node_modules/@mangata-finance/type-definitions/src/index.js b/node_modules/@mangata-finance/type-definitions/src/index.js
index 9f0b1a1..f4d648c 100644
--- a/node_modules/@mangata-finance/type-definitions/src/index.js
+++ b/node_modules/@mangata-finance/type-definitions/src/index.js
@@ -248,7 +248,7 @@ export const mRpc = {
                     type: "AccountId"
                 }
             ],
-            type: "Vec<(TokenId, TokenId, Balance)>"
+            type: "Balance"
         }
     }
 };
diff --git a/node_modules/@mangata-finance/type-definitions/src/index.js.map b/node_modules/@mangata-finance/type-definitions/src/index.js.map
index bcda827..5b3140e 100644
--- a/node_modules/@mangata-finance/type-definitions/src/index.js.map
+++ b/node_modules/@mangata-finance/type-definitions/src/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../packages/type-definitions/src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../packages/type-definitions/src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@mangata-finance/type-definitions/src/index.mjs b/node_modules/@mangata-finance/type-definitions/src/index.mjs
new file mode 100644
index 0000000..500015a
--- /dev/null
+++ b/node_modules/@mangata-finance/type-definitions/src/index.mjs
@@ -0,0 +1,266 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.mangataTypesBundleForPolkadotApps = exports.mRpc = exports.mTypes = void 0;
+exports.mTypes = {
+    ShufflingSeed: {
+        seed: "H256",
+        proof: "H512"
+    },
+    Header: {
+        parentHash: "Hash",
+        number: "Compact<BlockNumber>",
+        stateRoot: "Hash",
+        extrinsicsRoot: "Hash",
+        digest: "Digest",
+        seed: "ShufflingSeed",
+        count: "BlockNumber"
+    },
+    RpcAssetMetadata: {
+        tokenId: "TokenId",
+        decimals: "u32",
+        name: "Vec<u8>",
+        symbol: "Vec<u8>"
+    },
+    TokenId: "u32",
+};
+exports.mRpc = {
+    xyk: {
+        calculate_buy_price: {
+            description: "Calculates and returns sold_token_amount while providing bought_token_amount and respective reserves",
+            params: [
+                {
+                    name: "input_reserve",
+                    type: "Balance"
+                },
+                {
+                    name: "output_reserve",
+                    type: "Balance"
+                },
+                {
+                    name: "sell_amount",
+                    type: "Balance"
+                }
+            ],
+            type: "Balance"
+        },
+        calculate_sell_price: {
+            description: "Calculates and returns bought_token_amount while providing sold_token_amount and respective reserves",
+            params: [
+                {
+                    name: "input_reserve",
+                    type: "Balance"
+                },
+                {
+                    name: "output_reserve",
+                    type: "Balance"
+                },
+                {
+                    name: "sell_amount",
+                    type: "Balance"
+                }
+            ],
+            type: "Balance"
+        },
+        get_burn_amount: {
+            description: "Returns amounts of tokens received by burning provided liquidity_token_amount in pool of provided token ids",
+            params: [
+                {
+                    name: "first_asset_id",
+                    type: "TokenId"
+                },
+                {
+                    name: "second_asset_id",
+                    type: "TokenId"
+                },
+                {
+                    name: "liquidity_asset_amount",
+                    type: "Balance"
+                }
+            ],
+            type: "(Balance,Balance)"
+        },
+        calculate_sell_price_id: {
+            description: "Same as calculate_sell_price, but providing token_id instead of reserves. Reserves are fetched by function.",
+            params: [
+                {
+                    name: "sold_token_id",
+                    type: "TokenId"
+                },
+                {
+                    name: "bought_token_id",
+                    type: "TokenId"
+                },
+                {
+                    name: "sell_amount",
+                    type: "Balance"
+                }
+            ],
+            type: "Balance"
+        },
+        calculate_buy_price_id: {
+            description: "Same as calculate_buy_price, but providing token_id instead of reserves. Reserves are fetched by function.",
+            params: [
+                {
+                    name: "sold_token_id",
+                    type: "TokenId"
+                },
+                {
+                    name: "bought_token_id",
+                    type: "TokenId"
+                },
+                {
+                    name: "buy_amount",
+                    type: "Balance"
+                }
+            ],
+            type: "Balance"
+        },
+        calculate_rewards_amount: {
+            description: "Calculate rewards amount of liquidity token id for the user",
+            params: [
+                {
+                    name: "user",
+                    type: "AccountId"
+                },
+                {
+                    name: "liquidity_asset_id",
+                    type: "TokenId"
+                }
+            ],
+            type: "Balance"
+        },
+        calculate_balanced_sell_amount: {
+            description: "Calculates how much amount x we need to swap from total_amount, so that after y = swap(x), the resulting balance equals (total_amount - x) / y = pool_x / pool_y - the resulting amounts can then be used to `mint_liquidity` with minimal leftover after operation",
+            params: [
+                {
+                    name: "total_amount",
+                    type: "Balance"
+                },
+                {
+                    name: "reserve_amount",
+                    type: "Balance"
+                }
+            ],
+            type: "Balance"
+        },
+        get_max_instant_unreserve_amount: {
+            description: "Instant unreserve amount",
+            params: [
+                {
+                    name: "user",
+                    type: "AccountId"
+                },
+                {
+                    name: "liquidity_asset_id",
+                    type: "TokenId"
+                }
+            ],
+            type: "Balance"
+        },
+        get_max_instant_burn_amount: {
+            description: "",
+            params: [
+                {
+                    name: "user",
+                    type: "AccountId"
+                },
+                {
+                    name: "liquidity_asset_id",
+                    type: "TokenId"
+                }
+            ],
+            type: "Balance"
+        },
+        is_sell_asset_lock_free: {
+            description: "",
+            params: [
+                {
+                    name: "path",
+                    type: "Vec<TokenId>"
+                },
+                {
+                    name: "input_amount",
+                    type: "Balance"
+                }
+            ],
+            type: "Option<bool>"
+        },
+        is_buy_asset_lock_free: {
+            description: "",
+            params: [
+                {
+                    name: "path",
+                    type: "Vec<TokenId>"
+                },
+                {
+                    name: "input_amount",
+                    type: "Balance"
+                }
+            ],
+            type: "Option<bool>"
+        },
+        get_tradeable_tokens: {
+            description: "",
+            params: [],
+            type: "Vec<RpcAssetMetadata<TokenId>>"
+        },
+        get_liq_tokens_for_trading: {
+            description: "",
+            params: [],
+            type: "Vec<TokenId>"
+        }
+    },
+    pos: {
+        calculate_native_rewards_amount: {
+            description: "Calculates amount of available native rewards",
+            params: [
+                {
+                    name: "account",
+                    type: "AccountId"
+                },
+                {
+                    name: "liquidity_token",
+                    type: "TokenId"
+                }
+            ],
+            type: "Balance"
+        },
+        calculate_3rdparty_rewards_amount: {
+            description: "Calculates amount of available 3rdparty rewards",
+            params: [
+                {
+                    name: "account",
+                    type: "AccountId"
+                },
+                {
+                    name: "liquidity_token",
+                    type: "TokenId"
+                },
+                {
+                    name: "rewards_token",
+                    type: "TokenId"
+                }
+            ],
+            type: "Balance"
+        },
+        calculate_3rdparty_rewards_all: {
+            description: "Calculates all amount of available 3rdparty rewards",
+            params: [
+                {
+                    name: "account",
+                    type: "AccountId"
+                }
+            ],
+            type: "Vec<(TokenId, TokenId, Balance)>"
+        }
+    }
+};
+exports.mangataTypesBundleForPolkadotApps = {
+    types: [
+        {
+            minmax: [0, undefined],
+            types: exports.mTypes
+        }
+    ],
+    rpc: exports.mRpc
+};
